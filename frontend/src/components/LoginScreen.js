import React, { useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';
import toast from 'react-hot-toast';

export const LoginScreen = () => {
  const { login } = useAuth();

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
    if (window.Telegram?.WebApp) {
      const tg = window.Telegram.WebApp;
      
      // –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
      tg.expand();
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const initData = tg.initData;
      
      if (initData) {
        handleTelegramLogin(initData);
      } else {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞
        tg.ready();
        tg.MainButton.setText('–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram');
        tg.MainButton.show();
        tg.MainButton.onClick(() => {
          // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ Telegram OAuth
          toast.error('–§—É–Ω–∫—Ü–∏—è –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Telegram –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ');
        });
      }
    } else {
      // –î–µ–º–æ-—Ä–µ–∂–∏–º –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      console.log('–î–µ–º–æ-—Ä–µ–∂–∏–º: Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
    }
  }, []);

  const handleTelegramLogin = async (initData) => {
    try {
      const result = await login(initData);
      if (result.success) {
        toast.success('–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!');
      } else {
        toast.error(result.error || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
  };

  const handleDemoLogin = async () => {
    // –î–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    const demoData = 'user=%7B%22id%22%3A123456789%2C%22first_name%22%3A%22Demo%22%2C%22last_name%22%3A%22User%22%2C%22username%22%3A%22demo_user%22%2C%22language_code%22%3A%22ru%22%7D&chat_instance=-123456789&chat_type=sender&auth_date=1234567890&hash=demo_hash';
    
    try {
      const result = await login(demoData);
      if (result.success) {
        toast.success('–î–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
      } else {
        toast.error(result.error || '–û—à–∏–±–∫–∞ –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –¥–µ–º–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
  };

  return (
    <div className="container">
      <div className="card text-center">
        <h1 className="card-title">NakamaSpace</h1>
        <p className="card-subtitle mb-3">
          –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –¥–ª—è —Ñ—É—Ä—Ä–∏ –∏ –∞–Ω–∏–º–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        </p>
        
        <div className="mb-3">
          <h3>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h3>
          <p className="text-muted">
            –í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
          </p>
        </div>

        {!window.Telegram?.WebApp && (
          <div className="mb-3">
            <p className="text-muted text-small mb-2">
              –î–µ–º–æ-—Ä–µ–∂–∏–º (Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
            </p>
            <button 
              className="btn btn-primary"
              onClick={handleDemoLogin}
            >
              –í–æ–π—Ç–∏ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ
            </button>
          </div>
        )}

        <div className="text-muted text-small">
          <p>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</p>
          <ul style={{ textAlign: 'left', marginTop: '16px' }}>
            <li>üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ —Å —Ç–µ–º–∞–º–∏ (—Ñ—É—Ä—Ä–∏, –∞–Ω–∏–º–µ, –¥—Ä—É–≥–æ–µ)</li>
            <li>üîç –ü–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ e621 –∏ Danbooru</li>
            <li>üë• –ü–æ–¥–ø–∏—Å–∫–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
            <li>üé® –°—Ç–∏–ª—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –¥—É—Ö–µ Telegram</li>
            <li>üõ°Ô∏è –°–∏—Å—Ç–µ–º–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ NSFW —Ñ–∏–ª—å—Ç—Ä—ã</li>
          </ul>
        </div>
      </div>
    </div>
  );
};
